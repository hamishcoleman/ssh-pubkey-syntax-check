#!/usr/bin/env perl
use warnings;
use strict;
#
# Given a base64 encoded key on the commandline (or stdin), dump its contents
#

use File::Spec;

# allow the libs to be in the bin dir
use FindBin;
use lib File::Spec->catdir($FindBin::RealBin,"lib");

use SSH::Key;
use HexDump;

use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Quotekeys = 0;


sub dump_one {
    my $encoded = shift;

    my $key = SSH::Key->new();
    $key->parse($encoded);

    my $error = $key->error();
    if (defined($error)) {
        print("Error: ",$error,"\n");
    }

    my $binary = $key->{binary} ||'';
    print("binary object:\n");
    print(HexDump::hexdump($binary),"\n\n");

    my $field_nr = 0;
    for my $field (@{$key->{fields}}) {
        print("Field $field_nr\n");
        print(HexDump::hexdump($field),"\n");
        $field_nr++;
    }
    print("Encoded length:  ",length($encoded),"\n");
    print("Binary length:   ",length($binary),"\n");
}

sub main() {
    if (defined($ARGV[0])) {
        dump_one($ARGV[0]);
        return;
    }

    while(<>) {
        dump_one($_);
        print("\n");
    }
}
main();

